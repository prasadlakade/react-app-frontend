{"version":3,"sources":["common/usecontexts/userAuthContext.js","components/commonLeftPanel/CommonLeftPanel.jsx","components/dashboard/DashboardScreen.jsx","common/common.js","common/formFields/RenderInput.js","common/formFields/RenderSelect.js","common/LocalStorageActions.js","components/login/LoginScreen.jsx","components/footer/Footer.jsx","common/constants.js","components/dashboard/formScreen/FormScreen.jsx","components/dashboard/manageGroups/ManageGroups.jsx","components/dashboard/manageUsers/ManageUsers.jsx","utils/SwitchToggle.jsx","components/header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["userAuthContext","createContext","CommonLeftPanel","props","authencationDetails","useContext","className","Container","Row","Col","username","toUpperCase","category","to","DashboardScreen","console","log","isloggedIn","userCategory","RenderInput","onChange","Form","Group","Label","htmlFor","name","label","Control","type","placeholder","autoComplete","value","values","RenderSelect","options","as","map","item","title","setLocalStorageData","key","data","localStorage","setItem","JSON","stringify","withRouter","useState","email","password","loginFormValues","setLoginFormValues","e","target","ValidateLogin","dummyLoginData","users","Object","hasOwnProperty","call","currObj","alert","onSubmit","preventDefault","isValidate","userData","setLoggedInDetails","history","push","Button","variant","Footer","GROUP_FORM","USER_FORM","FormScreen","formType","editDataRow","formAction","FormKeys","fieldName","groupName","groupCategory","groupSubCategory","userName","userId","userEmail","status","formValues","setFormValues","useEffect","length","list","onInputChange","_id","uuidv4","handleSubmitForm","ManageGroups","filteredTableData","internalTheme","mainTheme","searchText","searchBy","searchField","setSearchField","groupData","setGroupData","setEditDataRow","show","setShow","setFormAction","getGroupsLocalData","parse","getItem","handleShow","modalClose","groups","tableHeaderArr","tableHeaders","el","handleChange","id","document","querySelector","filter","toLowerCase","includes","deleteGroup","onEditGroup","getEditData","InputGroup","FormControl","Append","onClick","event","Table","responsive","bordered","hover","striped","size","index","ButtonGroup","colSpan","style","textAlign","Modal","fullscreen","centered","onHide","Header","closeButton","Title","Body","action","finalFormData","editedArray","mergedArray","ManageUsers","getUserLocalData","deleteUser","onEditUsers","changeUserStatus","currUser","editedFinalData","editedStatus","changedStatus","FinalMerged","width","SwitchToggle","setAppTheme","defaultChecked","onLogout","process","textDecoration","App","setMainTheme","setAuthencationDetails","userLocalData","Provider","checked","removeItem","deleteLocalStorageData","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45a51895.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const userAuthContext = createContext();\n","import React, { useContext } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { userAuthContext } from '../../common/usecontexts/userAuthContext';\nimport './CommonLeftPanel.styles.scss';\n\nconst CommonLeftPanel = (props) => {\n  const { authencationDetails } = useContext(userAuthContext);\n  return (\n    <>\n      <div className=\"left-panel-wrapper\">\n        <Container>\n          <Row >\n            <Col>\n              <div className=\"profileDisplay card-gm\">\n                <h6>Name: {authencationDetails.username.toUpperCase()}</h6>\n                <span><strong>({authencationDetails.category})</strong></span>\n              </div>\n            </Col>\n          </Row>\n          <hr />\n          <Row >\n            <Col>\n              <nav className=\"leftpanel-menu\">\n              <ul>\n                  <li>\n                    <Link to=\"/dashboard\" className=\"card-gm\">Dashboard</Link>\n                    <ul>\n                      {(authencationDetails.category === 'Administrator')\n                        ? (<li>\n                          <Link to=\"/dashboard/groups\" className=\"card-gm\">Manage Groups</Link>\n                          </li>)\n                        : null\n                      }\n                      <li>\n                          <Link to=\"/dashboard/users\" className=\"card-gm\">Manage Users</Link>\n                          </li>\n                    </ul>\n                  </li>\n                </ul>\n              </nav>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default CommonLeftPanel;\n","import React, { useContext } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { userAuthContext } from '../../common/usecontexts/userAuthContext';\nimport CommonLeftPanel from '../commonLeftPanel/CommonLeftPanel';\nimport PropTypes from 'prop-types';\n\nimport './Dashboard.styles.scss';\n\nconst DashboardScreen = (props) => {\n  const { authencationDetails } = useContext(userAuthContext);\n  console.log('authencationDetails', authencationDetails);\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <CommonLeftPanel/>\n      <div className=\"right-panel-wrapper\">\n        <Container>\n          <Row>\n            <Col>\n              {authencationDetails && authencationDetails.isloggedIn &&\n              (<p>{authencationDetails.category + ' screen' }</p>)\n              }\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n              <Col className=\"mb-5\">\n                <div className=\"dashboard-content\">\n                {\n                  (authencationDetails && authencationDetails.category === 'Administrator')\n                    ? (\n                        <div className=\"db-card card-gm\">\n                          <Link to=\"/dashboard/groups\">\n                            <span>Manage Groups</span>\n                          </Link>\n                        </div>\n                      )\n                    : null\n                }\n                  <div className=\"db-card card-gm\">\n                    <Link to=\"/dashboard/users\">\n                      <span>Manage Users</span>\n                    </Link>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nDashboardScreen.propTypes = {\n  mainTheme: PropTypes.string\n};\n\nexport default DashboardScreen;\n","export const userCategory = ['---select---', 'Administrator', 'Helpdesk', 'User'];\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst RenderInput = (props) => {\n  const { onChange } = props;\n  return (\n    <>\n      <Form.Group>\n        <Form.Label htmlFor={props.name}>{props.label}</Form.Label>\n        <Form.Control\n          type={props.type}\n          placeholder={props.label}\n          name={props.name}\n          autoComplete=\"off\"\n          onChange={onChange}\n          value={props.values[props.name]} />\n      </Form.Group>\n    </>\n  );\n};\n\nRenderInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  values: PropTypes.objectOf(PropTypes.string)\n};\n\nexport default RenderInput;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst RenderSelect = (props) => {\n  const { options, onChange } = props;\n  return (\n    <>\n      <Form.Group>\n        <Form.Label htmlFor={props.name}>{props.label}</Form.Label>\n        <Form.Control\n          as={props.type}\n          name={props.name}\n          value={props.values[props.name]}\n          onChange={onChange}\n          >\n          {\n            options && (\n              options.map((item) => (\n                <option value={item} title={item} key={item}>{item}</option>\n              ))\n            )\n          }\n        </Form.Control>\n      </Form.Group>\n    </>\n  );\n};\n\nRenderSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  values: PropTypes.objectOf(PropTypes.string)\n};\n\nexport default RenderSelect;\n","export const setLocalStorageData = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getLocalStorageData = (key) => {\n  const data = JSON.parse(localStorage.getItem(key));\n  return data;\n};\n\nexport const deleteLocalStorageData = (key) => {\n  localStorage.removeItem(key);\n};\n","import React, { useState } from 'react';\n\nimport { Button, Form } from 'react-bootstrap';\nimport { userCategory } from '../../common/common';\nimport RenderInput from '../../common/formFields/RenderInput';\nimport RenderSelect from '../../common/formFields/RenderSelect';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport dummyLoginData from '../../dummyData/logindata.json';\n\nimport './LoginScreenStyles.scss';\nimport { setLocalStorageData } from '../../common/LocalStorageActions';\n\nconst LoginScreen = (props) => {\n  const [loginFormValues, setLoginFormValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    category: ''\n  });\n\n  const onChange = (e) => {\n    setLoginFormValues({\n      ...loginFormValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('loginFormValues', loginFormValues);\n    const isValidate = ValidateLogin(loginFormValues);\n    if (isValidate) {\n      console.log('isValidate', isValidate);\n      const userData = {\n        isloggedIn: true,\n        username: loginFormValues.username,\n        email: loginFormValues.email,\n        category: loginFormValues.category\n      };\n      setLocalStorageData('isLoggedIn', userData);\n      props.setLoggedInDetails(userData);\n      setLoginFormValues({\n        username: '',\n        email: '',\n        password: '',\n        category: ''\n      });\n      props.history.push('/dashboard');\n    }\n  };\n\n  const ValidateLogin = (data) => {\n    for (const key in dummyLoginData.users) {\n      if (Object.hasOwnProperty.call(dummyLoginData.users, key)) {\n        const currObj = dummyLoginData.users[key];\n        console.log(currObj);\n        if (currObj.username === data.username &&\n          currObj.email === data.email &&\n          currObj.password === data.password &&\n           currObj.category === data.category) {\n          return true;\n        }\n      }\n    }\n    alert('login Failed');\n    return false;\n  };\n\n  return (\n        <div className=\"login-wrapper\">\n           <div className=\"card-gm login-block\">\n              <p className=\"card-title\">Login here!</p>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <Form onSubmit={handleSubmit}>\n                      <RenderInput\n                        type=\"text\"\n                        name=\"username\"\n                        label=\"Username\"\n                        values={loginFormValues}\n                        onChange={onChange}\n                      />\n                      <RenderInput\n                        type=\"email\"\n                        name=\"email\"\n                        label=\"Email\"\n                        values={loginFormValues}\n                        onChange={onChange}\n                      />\n                      <RenderInput\n                        type=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        values={loginFormValues}\n                        onChange={onChange}\n                      />\n                      <RenderSelect\n                        type=\"select\"\n                        name=\"category\"\n                        label=\"Login As\"\n                        options={userCategory}\n                        values={loginFormValues}\n                        onChange={onChange}\n                      />\n                      <Button variant=\"primary\" type=\"submit\">\n                        Login\n                      </Button>\n                    </Form>\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n  );\n};\n\nLoginScreen.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any),\n  setLoggedInDetails: PropTypes.func\n};\n\nexport default withRouter(LoginScreen);\n","import React from 'react';\nimport './FooterStyles.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer-wrapper\">\n      <p>Copyrights@2021</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const GROUP_FORM = 'GROUP_FORM';\nexport const USER_FORM = 'USER_FORM';\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport RenderInput from '../../../common/formFields/RenderInput';\nimport PropTypes from 'prop-types';\nimport { GROUP_FORM, USER_FORM } from '../../../common/constants';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './FormScreen.styles.scss';\n\nconst FormScreen = (props) => {\n  const { formType, editDataRow, formAction } = props;\n  console.log('editDataRow', editDataRow);\n  const [formValues, setFormValues] = useState({\n    groupName: formType === GROUP_FORM ? '' : '',\n    groupCategory: formType === GROUP_FORM ? '' : null,\n    groupSubCategory: formType === GROUP_FORM ? '' : null,\n    userName: formType === USER_FORM ? '' : null,\n    userId: formType === USER_FORM ? '' : null,\n    userEmail: formType === USER_FORM ? '' : null,\n    status: formType === USER_FORM ? '' : null\n  });\n  let FormKeys, fieldName;\n\n  if (formType.toUpperCase() === GROUP_FORM) {\n    FormKeys = ['groupName', 'groupCategory', 'groupSubCategory'];\n    fieldName = ['Group Name', 'Group Category', 'Group Sub-Category'];\n  } else if (formType.toUpperCase() === USER_FORM) {\n    FormKeys = ['userName', 'userId', 'userEmail', 'groupName'];\n    fieldName = ['User Name', 'User ID', 'User Email', 'Group Name'];\n  }\n\n  useEffect(() => {\n    if (formAction === 'EDIT_FORM' && (editDataRow && editDataRow.length > 0)) {\n      editDataRow.map((list) => (\n        setFormValues(list)\n      ));\n    }\n  }, []);\n\n  const onInputChange = (e) => {\n    console.log('e', e.target.name + ' : ' + e.target.value);\n    if (formType.toUpperCase() === GROUP_FORM || formType.toUpperCase() === USER_FORM) {\n      if (formAction === 'EDIT_FORM') {\n        setFormValues(\n          {\n            ...formValues,\n            [e.target.name]: e.target.value\n          }\n        );\n      } else {\n        setFormValues(\n          {\n            ...formValues,\n            _id: uuidv4(),\n            [e.target.name]: e.target.value\n          }\n        );\n      }\n    }\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    console.log('formValues', formValues);\n    props.handleSubmitForm(formValues, formAction, formType);\n  };\n  return (\n    <div className=\"innerForm-wrapper\">\n      <Form onSubmit={handleSubmitForm}>\n        <RenderInput\n          name={FormKeys[0]}\n          label={fieldName[0]}\n          type=\"text\"\n          placeholder={fieldName[0]}\n          values={formValues}\n          onChange={onInputChange}\n        />\n        <RenderInput\n          name={FormKeys[1]}\n          label={fieldName[1]}\n          type=\"text\"\n          placeholder={fieldName[1]}\n          values={formValues}\n          onChange={onInputChange}\n        />\n        <RenderInput\n          name={FormKeys[2]}\n          label={fieldName[2]}\n          type=\"text\"\n          placeholder={fieldName[2]}\n          values={formValues}\n          onChange={onInputChange}\n        />\n        {formType.toUpperCase() === USER_FORM &&\n          <RenderInput\n          name={FormKeys[3]}\n          label={fieldName[3]}\n          type=\"text\"\n          placeholder={fieldName[3]}\n          values={formValues}\n          onChange={onInputChange}\n        />\n        }\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  );\n};\n\nFormScreen.propTypes = {\n  formType: PropTypes.string,\n  formAction: PropTypes.string,\n  handleSubmitForm: PropTypes.func,\n  editDataRow: PropTypes.any\n};\n\nexport default FormScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Button, ButtonGroup, Col, Container, Form, FormControl, InputGroup, Modal, Row, Table } from 'react-bootstrap';\nimport CommonLeftPanel from '../../commonLeftPanel/CommonLeftPanel';\nimport PropTypes from 'prop-types';\n\nimport './ManageGroups.styles.scss';\nimport { GROUP_FORM } from '../../../common/constants';\nimport FormScreen from '../formScreen/FormScreen';\nimport { setLocalStorageData } from '../../../common/LocalStorageActions';\n\nconst ManageGroups = (props) => {\n  let filteredTableData;\n  const internalTheme = props.mainTheme === 'theme-dark' ? 'dark' : 'light';\n  const [searchField, setSearchField] = useState({\n    searchText: '',\n    searchBy: 'groupName'\n  });\n  const [groupData, setGroupData] = useState({});\n  const [editDataRow, setEditDataRow] = useState({});\n  const [show, setShow] = useState(false);\n  const [formAction, setFormAction] = useState('');\n\n  let getGroupsLocalData = JSON.parse(localStorage.getItem('GROUP_FORM_LSDATA'));\n\n  const handleShow = () => {\n    setShow(true);\n  };\n  const modalClose = (e) => {\n    setShow(false);\n  };\n\n  const AddNewForm = (event, type) => {\n    setFormAction('NEW_FORM');\n    handleShow();\n  };\n\n  useEffect(() => {\n    console.log('getGroupsLocalData', getGroupsLocalData);\n    if (getGroupsLocalData) {\n      setGroupData({\n        ...groupData,\n        groups: getGroupsLocalData\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('groupData', groupData);\n  }, [groupData]);\n\n  const tableHeaderArr = [\n    'Sr.No', 'Group Name', 'Group Category', 'Group SubCategory', 'Action'\n  ];\n  const tableHeaders = (tableHeaderArr)\n    ? (\n        tableHeaderArr.map((el) => (\n          <th key={el}>{el}</th>\n        ))\n      )\n    : [];\n\n  const handleChange = (e, id) => {\n    setSearchField({\n      ...searchField,\n      [e.target.name]: e.target.value,\n      [id]: document.querySelector(`#${id}`).value\n    });\n  };\n\n  const { searchText, searchBy } = searchField;\n  if (searchField.searchBy && groupData) {\n    filteredTableData = (groupData.groups) && groupData.groups.filter((el) => {\n      console.log('el[searchBy]', el);\n      console.log('searchBy', searchBy);\n      return (el[searchBy].toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  const handleSubmit = (formValues, action, formType) => {\n    if (!getGroupsLocalData) {\n      getGroupsLocalData = [];\n    }\n    const finalFormData = [];\n    finalFormData.push(formValues);\n\n    let editedArray = [];\n    let mergedArray = [];\n\n    if (action === 'EDIT_FORM' && formType === GROUP_FORM) {\n      editedArray = getGroupsLocalData.filter((item) => {\n        return (\n          item._id !== editDataRow[0]._id &&\n          item.groupName !== editDataRow[0].groupName &&\n          item.groupCategory !== editDataRow[0].groupCategory &&\n          item.groupSubCategory !== editDataRow[0].groupSubCategory\n        );\n      });\n      console.log('editedArray', editedArray);\n      mergedArray = [\n        ...editedArray, ...finalFormData\n      ];\n    } else {\n      mergedArray = [\n        ...getGroupsLocalData, ...finalFormData\n      ];\n    }\n\n    console.log('mergedArray', mergedArray);\n    // setLocalData\n    setLocalStorageData(`${GROUP_FORM}_LSDATA`, mergedArray);\n\n    setGroupData({\n      ...groupData,\n      groups: mergedArray\n    });\n    setEditDataRow({});\n    setFormAction('');\n    modalClose();\n  };\n\n  const deleteGroup = (e) => {\n    let filteredTableData;\n    console.log('id', e.target.id);\n    if (getGroupsLocalData) {\n      filteredTableData = getGroupsLocalData.filter((list) => {\n        return (list._id !== e.target.id);\n      });\n    }\n    console.log('filteredTableData', filteredTableData);\n    setLocalStorageData(`${GROUP_FORM}_LSDATA`, filteredTableData);\n    setGroupData({\n      ...groupData,\n      groups: filteredTableData\n    });\n  };\n\n  const onEditGroup = (e) => {\n    console.log('e.target.id', e.target.id);\n    let getEditData;\n    if (groupData && groupData.groups) {\n      getEditData = groupData.groups.filter((item) => (\n        e.target.id === item._id\n      ));\n    }\n    setEditDataRow(getEditData);\n    setFormAction('EDIT_FORM');\n    handleShow();\n  };\n\n  return (\n    <div className=\"manage-group-wrapper common-wrap-flex\">\n      <CommonLeftPanel />\n      <Container>\n        <div className=\"inner-common-wrapper\">\n        <Row>\n          <Col>\n              <h5>Manage Groups</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"searchbar\">\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Search Group\"\n                  aria-label=\"Search Group\"\n                  aria-describedby=\"Search Group\"\n                  onChange={(e) => (handleChange(e, 'searchBy'))}\n                  name=\"searchText\"\n                  id=\"searchText\"\n                  autoComplete=\"off\"\n                />\n                <InputGroup.Append>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"searchBy\"\n                    id=\"searchBy\"\n                    variant={internalTheme}\n                    onChange={(e) => (handleChange(e, 'searchText'))}>\n                    <option value=\"groupName\" title=\"Search by Group Name\">Search by Group Name</option>\n                    <option value=\"groupCategory\" title=\"Search by Group Category\">Search by Group Category</option>\n                    <option value=\"groupSubCategory\" title=\"Search by Group Sub Category\">Search by Group Sub Category</option>\n                  </Form.Control>\n                </InputGroup.Append>\n              </InputGroup>\n            </div>\n          </Col>\n          <Col>\n              <div className=\"\">\n                <Button variant={`${internalTheme}`} onClick={AddNewForm}>Create New</Button>\n              </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {props.mainTheme &&\n            <Table responsive bordered hover striped variant={internalTheme} size=\"sm\">\n              <thead>\n                <tr>\n                { tableHeaders }\n                </tr>\n              </thead>\n              <tbody>\n                {filteredTableData && filteredTableData.length > 0\n                  ? (filteredTableData.map((el, index) => (\n                    <tr key={el._id}>\n                      <td>{index + 1}</td>\n                      <td>{el.groupName}</td>\n                      <td>{el.groupCategory}</td>\n                      <td>{el.groupSubCategory}</td>\n                      <td>\n                        <ButtonGroup aria-label=\"actionButtonGrpup\">\n                          <Button id={el._id} variant={internalTheme} size=\"sm\">View</Button>\n                          <Button\n                            id={el._id}\n                            variant={internalTheme}\n                            onClick={onEditGroup}\n                            size=\"sm\">Edit</Button>\n                          <Button\n                            id={el._id}\n                            variant=\"danger\"\n                            onClick={deleteGroup}\n                            size=\"sm\">Delete</Button>\n                        </ButtonGroup>\n                      </td>\n                    </tr>\n                    )))\n                  : (\n                  <tr>\n                    <td colSpan=\"5\" style={{ textAlign: 'left' }}>No Data</td>\n                  </tr>\n                    )\n                }\n              </tbody>\n            </Table>\n          }\n          </Col>\n        </Row>\n        </div>\n\n        {/* modal */}\n        <Modal\n          show={show}\n          fullscreen=\"true\"\n          variant={`${internalTheme}`}\n          centered\n          onHide={modalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormScreen\n              formType={GROUP_FORM}\n              editDataRow={editDataRow || []}\n              handleSubmitForm={handleSubmit}\n              formAction={formAction}\n            />\n          </Modal.Body>\n        </Modal>\n      </Container>\n    </div>\n  );\n};\n\nManageGroups.propTypes = {\n  mainTheme: PropTypes.string\n};\n\nexport default ManageGroups;\n","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Col, Container, FormControl, InputGroup, Modal, Row, Table } from 'react-bootstrap';\nimport { USER_FORM } from '../../../common/constants';\nimport CommonLeftPanel from '../../commonLeftPanel/CommonLeftPanel';\nimport FormScreen from '../formScreen/FormScreen';\n\nimport PropTypes from 'prop-types';\n\nimport './ManageUsers.styles.scss';\nimport { setLocalStorageData } from '../../../common/LocalStorageActions';\n\nconst ManageUsers = (props) => {\n  const [searchField, setSearchField] = useState({\n    searchText: '',\n    searchBy: 'userName'\n  });\n  const [groupData, setGroupData] = useState({});\n  const [editDataRow, setEditDataRow] = useState({});\n  const [show, setShow] = useState(false);\n  const [formAction, setFormAction] = useState('');\n\n  const internalTheme = props.mainTheme === 'theme-dark' ? 'dark' : 'light';\n  let getUserLocalData = JSON.parse(localStorage.getItem('USER_FORM_LSDATA'));\n  let filteredTableData;\n  //\n  const handleShow = () => {\n    setShow(true);\n  };\n  const modalClose = (e) => {\n    setShow(false);\n  };\n\n  const AddNewForm = (event, type) => {\n    setFormAction('NEW_FORM');\n    handleShow();\n  };\n\n  //\n  const handleChange = (e, id) => {\n    setSearchField({\n      ...searchField,\n      [e.target.name]: e.target.value,\n      [id]: document.querySelector(`#${id}`).value\n    });\n  };\n  const { searchText, searchBy } = searchField;\n  if (searchField.searchBy && groupData) {\n    filteredTableData = (groupData.users) && groupData.users.filter((el) => {\n      console.log('el[searchBy]', el);\n      console.log('searchBy', searchBy);\n      return (el[searchBy].toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  useEffect(() => {\n    console.log('getUserLocalData', getUserLocalData);\n    if (getUserLocalData) {\n      setGroupData({\n        ...groupData,\n        users: getUserLocalData\n      });\n    }\n  }, []);\n\n  //\n  const tableHeaderArr = [\n    'Sr.No', 'User Name', 'User ID', 'User Email', 'Groups', 'Status', 'Action'\n  ];\n  const tableHeaders = (tableHeaderArr)\n    ? (\n        tableHeaderArr.map((el) => (\n          <th key={el}>{el}</th>\n        ))\n      )\n    : [];\n\n  //\n  const handleSubmit = (formValues, action, formType) => {\n    if (!getUserLocalData) {\n      getUserLocalData = [];\n    }\n    const finalFormData = [];\n    finalFormData.push({ ...formValues, status: 'Active' });\n\n    let editedArray = [];\n    let mergedArray = [];\n\n    if (action === 'EDIT_FORM' && formType === USER_FORM) {\n      editedArray = getUserLocalData.filter((item) => {\n        return (\n          item._id !== editDataRow[0]._id &&\n          item.userName !== editDataRow[0].userName &&\n          item.userId !== editDataRow[0].userId &&\n          item.userEmail !== editDataRow[0].userEmail &&\n          item.status !== editDataRow[0].status &&\n          item.groupName !== editDataRow[0].groupName\n        );\n      });\n      console.log('editedArray', editedArray);\n      mergedArray = [\n        ...editedArray, ...finalFormData\n      ];\n    } else {\n      mergedArray = [\n        ...getUserLocalData, ...finalFormData\n      ];\n    }\n\n    console.log('mergedArray', mergedArray);\n    // setLocalData\n    setLocalStorageData(`${USER_FORM}_LSDATA`, mergedArray);\n\n    setGroupData({\n      ...groupData,\n      users: mergedArray\n    });\n    setEditDataRow({});\n    setFormAction('');\n    modalClose();\n  };\n  const deleteUser = (e) => {\n    let filteredTableData;\n    if (getUserLocalData) {\n      filteredTableData = getUserLocalData.filter((list) => {\n        return (list._id !== e.target.id);\n      });\n    }\n    console.log('filteredTableData', filteredTableData);\n    setLocalStorageData(`${USER_FORM}_LSDATA`, filteredTableData);\n    setGroupData({\n      ...groupData,\n      users: filteredTableData\n    });\n  };\n  const onEditUsers = (e) => {\n    let getEditData;\n    if (groupData && groupData.users) {\n      getEditData = groupData.users.filter((item) => (\n        e.target.id === item._id\n      ));\n    }\n    setEditDataRow(getEditData);\n    setFormAction('EDIT_FORM');\n    handleShow();\n  };\n  const changeUserStatus = (e) => {\n    let currUser;\n    let editedFinalData;\n    if (groupData && groupData.users) {\n      currUser = groupData.users.filter((item) => (\n        e.target.id === item._id\n      ));\n    }\n    console.log(currUser, 'currUser');\n    const editedStatus = currUser.map(list => {\n      const changedStatus = list.status === 'Active' ? 'Inactive' : 'Active';\n      return ({\n        ...list,\n        status: changedStatus\n      });\n    });\n    console.log(editedStatus, 'editedStatus');\n\n    if (groupData && groupData.users) {\n      editedFinalData = groupData.users.filter((item) => (\n        e.target.id !== item._id\n      ));\n    }\n\n    console.log(editedFinalData, 'editedFinalData');\n\n    const FinalMerged = [...editedFinalData, ...editedStatus];\n    setLocalStorageData(`${USER_FORM}_LSDATA`, FinalMerged);\n    setGroupData({\n      ...groupData,\n      users: FinalMerged\n    });\n  };\n\n  return (\n    <div className=\"manage-user-wrapper common-wrap-flex\">\n      <CommonLeftPanel />\n      <Container>\n        <div className=\"inner-common-wrapper\">\n        <Row>\n          <Col>\n              <h5>Manage Users</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"searchbar\">\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Search User\"\n                  aria-label=\"Search User\"\n                  aria-describedby=\"Search User\"\n                  onChange={(e) => (handleChange(e, 'searchBy'))}\n                  name=\"searchText\"\n                  id=\"searchText\"\n                  autoComplete=\"off\"\n                />\n                <InputGroup.Append>\n                  <FormControl\n                    as=\"select\"\n                    name=\"searchBy\"\n                    id=\"searchBy\"\n                    variant={internalTheme}\n                    onChange={(e) => (handleChange(e, 'searchText'))}>\n                    <option value=\"userName\" title=\"Search by User Name\">Search by User Name</option>\n                    <option value=\"userId\" title=\"Search by User Id\">Search by User Id</option>\n                    <option value=\"userEmail\" title=\"Search by User Email\">Search by User Email</option>\n                  </FormControl>\n                </InputGroup.Append>\n              </InputGroup>\n            </div>\n          </Col>\n          <Col>\n              <div className=\"\">\n                <Button variant={`${internalTheme}`} onClick={AddNewForm}>Create New</Button>\n              </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {props.mainTheme &&\n            <Table responsive bordered hover striped variant={internalTheme} size=\"sm\"\n            >\n              <thead>\n                <tr>\n                { tableHeaders }\n                </tr>\n              </thead>\n              <tbody>\n                {filteredTableData && filteredTableData.length > 0\n                  ? (filteredTableData.map((el, index) => (\n                    <tr key={el._id}>\n                      <td>{index + 1}</td>\n                      <td>{el.userName}</td>\n                      <td>{el.userId}</td>\n                      <td>{el.userEmail}</td>\n                      <td>{el.groupName}</td>\n                      <td>{el.status}</td>\n                      <td>\n                        <ButtonGroup aria-label=\"actionButtonGrpup\">\n                          <Button id={el._id} variant=\"secondary\" size=\"sm\">View</Button>\n                          <Button\n                            id={el._id}\n                            variant={'primary'}\n                            onClick={onEditUsers}\n                            size=\"sm\">Edit</Button>\n                          <Button\n                            id={el._id}\n                            variant=\"danger\"\n                            onClick={deleteUser}\n                            size=\"sm\">Delete</Button>\n                          <Button\n                            id={el._id}\n                            variant=\"warning\"\n                            onClick={changeUserStatus}\n                            style={{ width: '120px' }}\n                            size=\"sm\">{\n                              el.status === 'Active' ? 'Lock User' : 'Unlock User'\n                            }</Button>\n                        </ButtonGroup>\n                      </td>\n                    </tr>\n                    )))\n                  : (\n                  <tr>\n                    <td colSpan=\"7\" style={{ textAlign: 'left' }}>No Data</td>\n                  </tr>\n                    )\n                }\n              </tbody>\n            </Table>\n          }\n          </Col>\n        </Row>\n        </div>\n\n        {/* modal */}\n        <Modal\n          show={show}\n          fullscreen=\"true\"\n          variant={`${internalTheme}`}\n          centered\n          onHide={modalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormScreen\n              formType={USER_FORM}\n              editDataRow={editDataRow || []}\n              handleSubmitForm={handleSubmit}\n              formAction={formAction}\n            />\n          </Modal.Body>\n        </Modal>\n      </Container>\n    </div>\n  );\n};\n\nManageUsers.propTypes = {\n  mainTheme: PropTypes.string\n};\n\nexport default ManageUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SwitchToggle = (props) => {\n  const { setAppTheme } = props;\n  return (\n    <>\n      <label className=\"switch\" >\n        <input type=\"checkbox\" defaultChecked=\"checked\" onClick={setAppTheme} name=\"switchtoggle\" id=\"switchtoggle\"/>\n        <span className=\"slider round\"></span>\n      </label>\n    </>\n  );\n};\n\nSwitchToggle.propTypes = {\n  setAppTheme: PropTypes.func.isRequired\n};\n\nexport default SwitchToggle;\n","import React, { useContext } from 'react';\nimport SwitchToggle from '../../utils/SwitchToggle';\nimport PropTypes from 'prop-types';\nimport {\n  Link\n  , withRouter\n} from 'react-router-dom';\n\nimport './HeaderStyles.scss';\nimport { userAuthContext } from '../../common/usecontexts/userAuthContext';\n\nconst Header = (props) => {\n  const { authencationDetails } = useContext(userAuthContext);\n  const { onLogout } = props;\n  console.log('authencationDetails', authencationDetails);\n\n  const onLogoutHeader = () => {\n    onLogout();\n    props.history.push(process.env.PUBLIC_URL + '/');\n  };\n\n  return (\n    <>\n      <header>\n            <div className=\"logo-wrap\">\n              <h1>Web Manager</h1>\n            </div>\n            <div className=\"right-block\">\n              <nav className=\"main-menu\">\n                <ul>\n                  {(!authencationDetails.isloggedIn)\n                    ? (<li>\n                      <Link to={process.env.PUBLIC_URL + '/'}>Login</Link>\n                    </li>)\n                    : null\n                  }\n                  {(authencationDetails.isloggedIn)\n                    ? (<li>\n                        <Link to=\"/dashboard\">Dashboard</Link>\n                        </li>)\n                    : null\n                  }\n                  {(authencationDetails.isloggedIn)\n                    ? (\n                        <li>\n                      <div>\n                        <span\n                        className=\"text-default\"\n                        style={{ textDecoration: 'underline' }}\n                        onClick={onLogoutHeader}>Logout</span>\n                      </div>\n                      </li>)\n                    : null\n                  }\n                </ul>\n              </nav>\n              <div className=\"display-switch\">\n                <SwitchToggle setAppTheme={props.setAppTheme} />\n              </div>\n            </div>\n          </header>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  setAppTheme: PropTypes.func.isRequired,\n  onLogout: PropTypes.func,\n  authencationDetails: PropTypes.objectOf(PropTypes.any),\n  history: PropTypes.objectOf(PropTypes.any)\n};\n\nexport default withRouter(Header);\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport DashboardScreen from './components/dashboard/DashboardScreen';\nimport LoginScreen from './components/login/LoginScreen';\nimport Footer from './components/footer/Footer';\nimport ManageGroups from './components/dashboard/manageGroups/ManageGroups';\nimport ManageUsers from './components/dashboard/manageUsers/ManageUsers';\nimport Header from './components/header/Header';\n\nimport { userAuthContext } from './common/usecontexts/userAuthContext';\n\nimport './styles/scss/main.scss';\nimport { deleteLocalStorageData, getLocalStorageData } from './common/LocalStorageActions';\n\nconst App = (props) => {\n  const [mainTheme, setMainTheme] = useState('theme-dark');\n  const [authencationDetails, setAuthencationDetails] = useState({\n    isloggedIn: false,\n    username: '',\n    category: ''\n  });\n\n  const userLocalData = getLocalStorageData('isLoggedIn');\n  console.log('userLocalData', userLocalData);\n\n  const setAppTheme = (e) => {\n    console.log(e.target.checked);\n    setMainTheme(e.target.checked ? 'theme-dark' : 'theme-light');\n    return true;\n  };\n\n  const setLoggedInDetails = (data) => {\n    setAuthencationDetails(data);\n    console.log(data, 'data');\n  };\n  const onLogout = () => {\n    deleteLocalStorageData('isLoggedIn');\n    setAuthencationDetails({\n      isloggedIn: false,\n      username: ''\n    });\n  };\n\n  useEffect(() => {\n    if (userLocalData) {\n      setAuthencationDetails(userLocalData);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <div className={mainTheme}>\n        <div className=\"wrapper\">\n          <userAuthContext.Provider value={{ authencationDetails, setAuthencationDetails }}>\n          <Header setAppTheme={setAppTheme} authencationDetails={authencationDetails} onLogout={onLogout}/>\n          <main className=\"app-container\">\n          {\n            <Switch>\n              <Route path=\"/dashboard/groups\">\n                <ManageGroups mainTheme={mainTheme}/>\n              </Route>\n              <Route path=\"/dashboard/users\">\n                <ManageUsers mainTheme={mainTheme}/>\n              </Route>\n              <Route exact path=\"/dashboard\">\n                <DashboardScreen mainTheme={mainTheme}/>\n              </Route>\n              <Route exact path={process.env.PUBLIC_URL + '/'}>\n              <LoginScreen setLoggedInDetails={setLoggedInDetails}/>\n              </Route>\n            </Switch>\n          }\n          </main>\n          <Footer/>\n          </userAuthContext.Provider>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}